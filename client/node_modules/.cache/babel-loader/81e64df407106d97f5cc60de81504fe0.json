{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/ReactHillBrewing/client/src/components/Main/CategoryRecipes.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getRecipes } from '../../actions/recipe';\n\nconst CategoryRecipes = ({\n  recipe: {\n    recipes,\n    loading\n  },\n  getRecipes\n}) => {\n  useEffect(() => {\n    getRecipes();\n  }, [getRecipes]);\n  return loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  });\n};\n\nconst mapStateToProps = state => ({\n  recipe: state.recipe\n});\n\nexport default connect(mapStateToProps, {\n  getRecipes\n})(CategoryRecipes);","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/components/Main/CategoryRecipes.js"],"names":["React","useEffect","connect","getRecipes","CategoryRecipes","recipe","recipes","loading","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,sBAA3B;;AAEA,MAAMC,eAAe,GAAI,CAAC;AAAEC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAV;AAAgCJ,EAAAA;AAAhC,CAAD,KAAkD;AACvEF,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,UAAU;AACb,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAKA,SAEII,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR;AAaH,CAnBD;;AAqBA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BJ,EAAAA,MAAM,EAAEI,KAAK,CAACJ;AADgB,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAACM,eAAD,EAAkB;AAAEL,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,eAAzC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getRecipes } from '../../actions/recipe';\n\nconst CategoryRecipes =  ({ recipe: { recipes, loading }, getRecipes }) => {\n    useEffect(() => {\n        getRecipes();\n    }, [getRecipes]);\n\n    \n    return (\n\n        loading ? <Spinner /> : \n           \n            <div>\n                {/* {recipes.map(recipe => (\n                    <h4>{recipe.title}</h4>\n                ))} */}\n            </div>\n        \n\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    recipe: state.recipe\n})\n\nexport default connect(mapStateToProps, { getRecipes })(CategoryRecipes);"]},"metadata":{},"sourceType":"module"}