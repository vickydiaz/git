{"ast":null,"code":"import axios from 'axios';\nimport { url } from '../config';\nimport { GET_RECIPES, SELECT_RECIPE, CLEAR_SELECTED_RECIPE, SELECT_LATEST, GET_ALL_RECIPES } from './types'; // Get all recipes by category\n\nexport const getRecipesByCategory = category => async dispatch => {\n  try {\n    const res = await axios.get(`${url}/api/recipes?category=${category}`);\n    dispatch({\n      type: GET_RECIPES,\n      payload: res.data.data\n    });\n  } catch (err) {\n    console.error(err.message);\n  }\n}; // Select a recipe by slug\n\nexport const selectRecipe = slug => async dispatch => {\n  try {\n    const res = await axios.get(`${url}/api/recipes?slug=${slug}`);\n    dispatch({\n      type: SELECT_RECIPE,\n      payload: res.data.data[0]\n    });\n  } catch (err) {\n    console.error(err.message);\n  }\n}; // Get the latest recipe\n\nexport const getLatest = () => async dispatch => {\n  try {\n    const res = await axios.get(`${url}/api/recipes?latest_recipe=true`);\n    dispatch({\n      type: SELECT_LATEST,\n      payload: res.data.data[0]\n    });\n  } catch (err) {}\n}; // Clear selected recipe\n\nexport const clearSelectedRecipe = () => async dispatch => {\n  dispatch({\n    type: CLEAR_SELECTED_RECIPE\n  });\n};","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/actions/recipe.js"],"names":["axios","url","GET_RECIPES","SELECT_RECIPE","CLEAR_SELECTED_RECIPE","SELECT_LATEST","GET_ALL_RECIPES","getRecipesByCategory","category","dispatch","res","get","type","payload","data","err","console","error","message","selectRecipe","slug","getLatest","clearSelectedRecipe"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SACIC,WADJ,EAEIC,aAFJ,EAGIC,qBAHJ,EAIIC,aAJJ,EAKIC,eALJ,QAMO,SANP,C,CASA;;AACA,OAAO,MAAMC,oBAAoB,GAAGC,QAAQ,IAAI,MAAMC,QAAN,IAAkB;AAC9D,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,GAAEV,GAAI,yBAAwBO,QAAS,EAAlD,CAAlB;AAEAC,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,WADD;AAELW,MAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFb,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOC,GAAP,EAAY;AACTC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACJ;AACJ,CAXM,C,CAcP;;AACA,OAAO,MAAMC,YAAY,GAAGC,IAAI,IAAI,MAAMX,QAAN,IAAkB;AAClD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,GAAEV,GAAI,qBAAoBmB,IAAK,EAA1C,CAAlB;AAEAX,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,aADD;AAELU,MAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA,IAAT,CAAc,CAAd;AAFJ,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOC,GAAP,EAAY;AACTC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACJ;AACJ,CAXM,C,CAcP;;AACA,OAAO,MAAMG,SAAS,GAAG,MAAM,MAAMZ,QAAN,IAAkB;AAC7C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,GAAEV,GAAI,iCAAjB,CAAlB;AAEAQ,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,aADD;AAELQ,MAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA,IAAT,CAAc,CAAd;AAFJ,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOC,GAAP,EAAY,CAEb;AACJ,CAXM,C,CAcP;;AACA,OAAO,MAAMO,mBAAmB,GAAG,MAAM,MAAMb,QAAN,IAAkB;AACvDA,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAER;AADD,GAAD,CAAR;AAGH,CAJM","sourcesContent":["import axios from 'axios';\nimport { url } from '../config';\nimport { \n    GET_RECIPES,\n    SELECT_RECIPE,\n    CLEAR_SELECTED_RECIPE,\n    SELECT_LATEST,\n    GET_ALL_RECIPES\n} from './types';\n\n\n// Get all recipes by category\nexport const getRecipesByCategory = category => async dispatch => {\n    try {\n        const res = await axios.get(`${url}/api/recipes?category=${category}`);\n \n        dispatch({\n            type: GET_RECIPES,\n            payload: res.data.data \n        })\n    } catch (err) {\n         console.error(err.message);\n    } \n}\n\n\n// Select a recipe by slug\nexport const selectRecipe = slug => async dispatch => {\n    try {\n        const res = await axios.get(`${url}/api/recipes?slug=${slug}`);\n \n        dispatch({\n            type: SELECT_RECIPE,\n            payload: res.data.data[0] \n        })\n    } catch (err) {\n         console.error(err.message);\n    } \n}\n\n\n// Get the latest recipe\nexport const getLatest = () => async dispatch => {\n    try {\n        const res = await axios.get(`${url}/api/recipes?latest_recipe=true`);\n\n        dispatch({\n            type: SELECT_LATEST,\n            payload: res.data.data[0]\n        })\n    } catch (err) {\n        \n    }\n}\n\n\n// Clear selected recipe\nexport const clearSelectedRecipe = () => async dispatch => {\n    dispatch({\n        type: CLEAR_SELECTED_RECIPE\n    })\n}"]},"metadata":{},"sourceType":"module"}