{"ast":null,"code":"import _regeneratorRuntime from\"/Users/admin/Desktop/ReactHillBrewing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/admin/Desktop/ReactHillBrewing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/admin/Desktop/ReactHillBrewing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/admin/Desktop/ReactHillBrewing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/admin/Desktop/ReactHillBrewing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import{connect}from'react-redux';import{login,loadUser}from'../../../actions/auth';import{Link,Redirect}from'react-router-dom';var Login=function Login(_ref){var login=_ref.login,loadUser=_ref.loadUser,history=_ref.history,isAuthenticated=_ref.isAuthenticated,user=_ref.user;useEffect(function(){if(user!=='loggedOut'){loadUser();}},[loadUser]);useEffect(function(){if(isAuthenticated){history.push('/dashboard');}},[isAuthenticated]);var _useState=useState({name:'',password:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var name=formData.name,password=formData.password;var onChange=function onChange(e){setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();login(name,password);case 2:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"dash\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container auth\",style:{width:'50%'}},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h1\",null,/*#__PURE__*/React.createElement(\"img\",{src:\"hops-active.png\",alt:\"\",style:{height:'50px'}}),/*#__PURE__*/React.createElement(\"span\",{id:\"logintitle\"},\"Login\")),/*#__PURE__*/React.createElement(\"br\",null),\" \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},\"Name\"),/*#__PURE__*/React.createElement(\"input\",{id:\"name\",type:\"text\",name:\"name\",value:name,onChange:onChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{id:\"password\",type:\"password\",name:\"password\",value:password,onChange:onChange})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{className:\"btn-black btn-yellow\",type:\"submit\"},\" Log in \")),/*#__PURE__*/React.createElement(\"p\",{className:\"text-warning\"},\"No Account? \",/*#__PURE__*/React.createElement(Link,{to:\"/register\"},\"\\xA0 Register\"))))));};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated,user:state.auth.user};};export default connect(mapStateToProps,{login:login,loadUser:loadUser})(Login);","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/components/dashboard/auth/Login.js"],"names":["React","Fragment","useState","useEffect","connect","login","loadUser","Link","Redirect","Login","history","isAuthenticated","user","push","name","password","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","width","height","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { login, loadUser } from '../../../actions/auth';\nimport { Link, Redirect } from 'react-router-dom';\n\n\nconst Login = ({ login, loadUser, history, isAuthenticated, user }) => {\n    useEffect(() => {  \n        if(user !== 'loggedOut') {\n           loadUser(); \n        }   \n        \n    }, [loadUser]);\n\n    useEffect(() => {\n        if(isAuthenticated) {\n            history.push('/dashboard');\n        }\n    }, [isAuthenticated])\n\n    const [formData, setFormData] = useState({\n        name: '',\n        password: ''\n    })\n\n    const { name, password } = formData;\n\n\n    const onChange = e => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    }\n\n    const onSubmit = async e => {\n        e.preventDefault();\n\n        login(name, password);\n    }\n\n    return (\n        <Fragment>\n            <div className=\"dash\">\n\n\n                <div className=\"container auth\" style={{width: '50%'}} >\n                    <div className=\"card\">\n                        <h1><img src=\"hops-active.png\" alt=\"\" style={{height: '50px'}} /><span id=\"logintitle\">Login</span></h1>\n                        <br /> <br />\n                        <form onSubmit={onSubmit}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"name\">Name</label>\n                                <input id=\"name\" type=\"text\" name=\"name\" value={name} onChange={onChange} />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input id=\"password\" type=\"password\" name=\"password\" value={password} onChange={onChange} />\n                            </div>\n                            <br />\n                            <button className=\"btn-black btn-yellow\" type=\"submit\"> Log in </button>\n                        </form>\n\n                        <p className=\"text-warning\">\n                            No Account? <Link to=\"/register\">&nbsp; Register</Link>\n                        </p>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n})\n\nexport default connect(mapStateToProps, { login, loadUser })(Login);\n"]},"metadata":{},"sourceType":"module"}