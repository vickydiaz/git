{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/ReactHillBrewing/client/src/components/homepage/main/Recipe.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { url } from '../../../config';\nimport { selectRecipe } from '../../../actions/recipe';\nimport Spinner from '../layout/Spinner';\n\nconst Recipe = ({\n  recipe: {\n    selectedRecipe: {\n      title,\n      subtitle,\n      image,\n      paragraphs\n    },\n    loading\n  },\n  match,\n  selectRecipe\n}) => {\n  useEffect(() => {\n    selectRecipe(match.params.slug);\n  }, [match.params.slug, selectRecipe]);\n  let recipeImage = `${url}/uploads/recipe-img/${image}`;\n  return (\n    /*#__PURE__*/\n    // !title ? <Spinner /> : \n    React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-container\",\n      id: \"main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, subtitle), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blog-img\",\n      style: {\n        backgroundImage: `url(${recipeImage})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }), paragraphs.map(paragraph => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"paragraph-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, paragraph.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, paragraph.body.split(\"\\n\").map(function (item) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }\n      }, item, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 37\n        }\n      }));\n    }))))))\n  );\n};\n\nconst mapStateToProps = state => ({\n  recipe: state.recipe\n});\n\nexport default connect(mapStateToProps, {\n  selectRecipe\n})(Recipe);","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/components/homepage/main/Recipe.js"],"names":["React","Fragment","useEffect","connect","url","selectRecipe","Spinner","Recipe","recipe","selectedRecipe","title","subtitle","image","paragraphs","loading","match","params","slug","recipeImage","backgroundImage","map","paragraph","body","split","item","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AACZC,EAAAA,MAAM,EAAE;AAACC,IAAAA,cAAc,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA,KAAnB;AAA0BC,MAAAA;AAA1B,KAAjB;AAAyDC,IAAAA;AAAzD,GADI;AAEZC,EAAAA,KAFY;AAGZV,EAAAA;AAHY,CAAD,KAGQ;AAEnBH,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,YAAY,CAACU,KAAK,CAACC,MAAN,CAAaC,IAAd,CAAZ;AACH,GAFQ,EAEN,CAACF,KAAK,CAACC,MAAN,CAAaC,IAAd,EAAoBZ,YAApB,CAFM,CAAT;AAIA,MAAIa,WAAW,GAAI,GAAEd,GAAI,uBAAsBQ,KAAM,EAArD;AAEA;AAAA;AAEI;AAEA,wBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,EAAE,EAAC,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,KAAL,CADJ,eAEI;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBC,QAAtB,CAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEQ,QAAAA,eAAe,EAAG,OAAMD,WAAY;AAAtC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAKKL,UAAU,CAACO,GAAX,CAAeC,SAAS,iBACrB;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,SAAS,CAACX,KAAf,CADA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKW,SAAS,CAACC,IAAV,CAAeC,KAAf,CAAqB,IAArB,EAA2BH,GAA3B,CAA+B,UAASI,IAAT,EAAc;AAC1C,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,IADL,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH,KAPA,CADL,CAHA,CADH,CALL,CADJ;AAJJ;AA6BH,CAxCD;;AA2CA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BlB,EAAAA,MAAM,EAAEkB,KAAK,CAAClB;AADgB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACsB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,MAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { url } from '../../../config';\nimport { selectRecipe } from '../../../actions/recipe';\nimport Spinner from '../layout/Spinner';\n\nconst Recipe = ({ \n    recipe: {selectedRecipe: { title, subtitle, image, paragraphs }, loading}, \n    match, \n    selectRecipe }) => {\n        \n    useEffect(() => {\n        selectRecipe(match.params.slug);\n    }, [match.params.slug, selectRecipe]);\n\n    let recipeImage = `${url}/uploads/recipe-img/${image}`;\n\n    return (\n\n        // !title ? <Spinner /> : \n\n        <Fragment>\n            <div className=\"main-container\" id=\"main-container\">\n                <h1>{title}</h1>\n                <p className=\"muted\">{subtitle}</p>\n                <div className=\"blog-img\" style={{ backgroundImage: `url(${recipeImage})` }}></div>\n\n                {paragraphs.map(paragraph => (\n                    <div className=\"paragraph-group\">\n                    <h3>{paragraph.title}</h3>\n                    {/* <p>{paragraph.body.replace(/\\n/g, '<br />')}</p> */}\n                    <p>\n                        {paragraph.body.split(\"\\n\").map(function(item){\n                            return (\n                                <span>\n                                    {item}\n                                    <br />\n                                </span>\n                            )\n                        })}\n                    </p>\n                </div>\n                ))}\n            </div>\n        </Fragment>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    recipe: state.recipe\n});\n\nexport default connect(mapStateToProps, { selectRecipe })(Recipe);\n"]},"metadata":{},"sourceType":"module"}