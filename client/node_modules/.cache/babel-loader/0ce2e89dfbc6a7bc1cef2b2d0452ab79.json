{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/ReactHillBrewing/client/src/components/dashboard/auth/PrivateRoute.js\";\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React from 'react';\n\nconst PrivateRoute = ({\n  auth: {\n    isAuthenticated,\n    loading\n  },\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuthenticated && !loading ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 18\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 18\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/components/dashboard/auth/PrivateRoute.js"],"names":["Route","Redirect","connect","React","PrivateRoute","auth","isAuthenticated","loading","component","Component","rest","props","mapStateToProps","state"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAAR;AAAsCC,EAAAA,SAAS,EAAEC,SAAjD;AAA4D,KAAGC;AAA/D,CAAD,KAA2E;AAE5F,sBAEI,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAEC,KAAK,IAC1B,CAACL,eAAD,IAAoB,CAACC,OAArB,gBACK,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,gBAEK,oBAAC,SAAD,oBAAeI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ;AASH,CAXD;;AAaA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADkB,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAACU,eAAD,CAAP,CAAyBR,YAAzB,CAAf","sourcesContent":["import { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React from 'react';\n\nconst PrivateRoute = ({ auth: { isAuthenticated, loading }, component: Component, ...rest }) => {\n\n    return (\n\n        <Route {...rest} render={props =>\n            !isAuthenticated && !loading ?\n                (<Redirect to='/login' />) :\n                (<Component {...props} />)\n        } />\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}