{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/ReactHillBrewing/client/src/components/categories/CategoryBand.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { url } from '../../config';\nimport CategoryItem from './CategoryItem';\nimport { connect } from 'react-redux';\nimport { getCategories } from '../../actions/category';\nimport Spinner from '../layout/Spinner';\n\nconst CategoryBand = ({\n  category: {\n    categories,\n    loading\n  },\n  getCategories\n}) => {\n  useEffect(() => {\n    getCategories();\n  }, [getCategories]);\n  return loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"categories\",\n    id: \"categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, categories.map(category => /*#__PURE__*/React.createElement(CategoryItem, {\n    key: category._id,\n    category: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-wrap\",\n    \"data-category\": \"heffeweizen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"icon-image\",\n    src: `${url}/uploads/category-icons/heffeweizen-inactive.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    id: \"icon-link\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  }, \"Heffeweizen\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-wrap\",\n    \"data-category\": \"helles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"icon-image\",\n    src: `${url}/uploads/category-icons/helles-inactive.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    id: \"icon-link\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  }, \"Helles\")))))));\n};\n\nconst mapStateToProps = state => ({\n  category: state.category\n});\n\nexport default connect(mapStateToProps, {\n  getCategories\n})(CategoryBand);","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/components/categories/CategoryBand.js"],"names":["React","Fragment","useEffect","url","CategoryItem","connect","getCategories","Spinner","CategoryBand","category","categories","loading","map","_id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAClBC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GADQ;AAElBL,EAAAA;AAFkB,CAAD,KAGX;AAENJ,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,aAAa;AAChB,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAIA,SAEIK,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAEP,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,EAAE,EAAC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQD,UAAU,CAACE,GAAX,CAAeH,QAAQ,iBACnB,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,QAAQ,CAACI,GAA5B;AAAiC,IAAA,QAAQ,EAAEJ,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHR,eAQI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,qBAAc,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,EAAE,EAAC,YAAR;AAAqB,IAAA,GAAG,EAAG,GAAEN,GAAI,kDAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAG,IAAA,EAAE,EAAC,WAAN;AAAkB,IAAA,IAAI,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CADJ,CADJ,CARJ,eAiBI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,qBAAc,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,EAAE,EAAC,YAAR;AAAqB,IAAA,GAAG,EAAG,GAAEA,GAAI,6CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAG,IAAA,EAAE,EAAC,WAAN;AAAkB,IAAA,IAAI,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,CADJ,CAjBJ,CADJ,CADJ,CAJJ;AAoCH,CA7CD;;AAgDA,MAAMW,eAAe,GAAGC,KAAK,KAAK;AAC9BN,EAAAA,QAAQ,EAAEM,KAAK,CAACN;AADc,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACS,eAAD,EAAkB;AAAER,EAAAA;AAAF,CAAlB,CAAP,CAA4CE,YAA5C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { url } from '../../config';\nimport CategoryItem from './CategoryItem';\nimport { connect } from 'react-redux';\nimport { getCategories } from '../../actions/category';\nimport Spinner from '../layout/Spinner';\n\n\nconst CategoryBand = ({ \n    category: { categories, loading }, \n    getCategories \n    }) => {\n\n    useEffect(() => {\n        getCategories();\n    }, [getCategories]);    \n\n    return (\n\n        loading ? <Spinner /> : \n\n        <Fragment>\n            <div className=\"categories\" id=\"categories\">\n                <div className=\"container\">\n\n                    {\n                        categories.map(category => (\n                            <CategoryItem key={category._id} category={category} />\n                        ))\n                    }\n\n                    <div className=\"col\">\n                        <div className=\"inner-category\">\n                            <div className=\"icon-wrap\" data-category=\"heffeweizen\">\n                                <img id=\"icon-image\" src={`${url}/uploads/category-icons/heffeweizen-inactive.png`} />\n                                <a id=\"icon-link\" href=\"\">Heffeweizen</a>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col\">\n                        <div className=\"inner-category\">\n                            <div className=\"icon-wrap\" data-category=\"helles\">\n                                <img id=\"icon-image\" src={`${url}/uploads/category-icons/helles-inactive.png`} />\n                                <a id=\"icon-link\" href=\"\">Helles</a>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    category: state.category\n})\n\nexport default connect(mapStateToProps, { getCategories })(CategoryBand);"]},"metadata":{},"sourceType":"module"}