{"ast":null,"code":"import axios from 'axios';\nimport { url } from '../config';\nimport { CHANGE_EDIT_MODE, CLOSE_ADD_RECIPE_FORM, SELECT_EDIT_RECIPE } from './types'; // Open add recipe form \n\nexport const changeEditMode = (mode, recipe = null) => async dispatch => {\n  dispatch({\n    type: CHANGE_EDIT_MODE,\n    payload: {\n      mode,\n      recipe\n    }\n  });\n}; // Save new recipe \n\nexport const saveNewRecipe = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post(`${url}/api/recipes`, formData, config);\n    console.log(res.data);\n    dispatch({\n      type: CLOSE_ADD_RECIPE_FORM,\n      payload: res.data.data\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n}; // Select a recipe by id\n\nexport const selectEditRecipe = id => async dispatch => {\n  try {\n    const res = await axios.get(`${url}/api/recipes?_id=${id}`);\n    dispatch({\n      type: SELECT_EDIT_RECIPE,\n      payload: res.data.data[0]\n    });\n  } catch (err) {\n    console.error(err.message);\n  }\n};","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/actions/dashboard.js"],"names":["axios","url","CHANGE_EDIT_MODE","CLOSE_ADD_RECIPE_FORM","SELECT_EDIT_RECIPE","changeEditMode","mode","recipe","dispatch","type","payload","saveNewRecipe","formData","config","headers","res","post","console","log","data","err","message","selectEditRecipe","id","get","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SACIC,gBADJ,EAEIC,qBAFJ,EAGIC,kBAHJ,QAIO,SAJP,C,CAOA;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,IAAD,EAAOC,MAAM,GAAG,IAAhB,KAAyB,MAAMC,QAAN,IAAkB;AACrEA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEP,gBADD;AAELQ,IAAAA,OAAO,EAAE;AACLJ,MAAAA,IADK;AAELC,MAAAA;AAFK;AAFJ,GAAD,CAAR;AAOH,CARM,C,CAcP;;AACA,OAAO,MAAMI,aAAa,GAAGC,QAAQ,IAAI,MAAMJ,QAAN,IAAkB;AACvD,MAAI;AAEA,UAAMK,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAMA,UAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAY,GAAEf,GAAI,cAAlB,EAAiCW,QAAjC,EAA2CC,MAA3C,CAAlB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AAEAX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,qBADD;AAELO,MAAAA,OAAO,EAAEK,GAAG,CAACI,IAAJ,CAASA;AAFb,KAAD,CAAR;AAKH,GAjBD,CAiBE,OAAOC,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,OAAhB;AACH;AACJ,CArBM,C,CAwBP;;AACA,OAAO,MAAMC,gBAAgB,GAAGC,EAAE,IAAI,MAAMf,QAAN,IAAkB;AACpD,MAAI;AACA,UAAMO,GAAG,GAAG,MAAMf,KAAK,CAACwB,GAAN,CAAW,GAAEvB,GAAI,oBAAmBsB,EAAG,EAAvC,CAAlB;AAEAf,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,kBADD;AAELM,MAAAA,OAAO,EAAEK,GAAG,CAACI,IAAJ,CAASA,IAAT,CAAc,CAAd;AAFJ,KAAD,CAAR;AAKH,GARD,CAQE,OAAOC,GAAP,EAAY;AACTH,IAAAA,OAAO,CAACQ,KAAR,CAAcL,GAAG,CAACC,OAAlB;AACJ;AACJ,CAZM","sourcesContent":["import axios from 'axios';\nimport { url } from '../config';\nimport { \n    CHANGE_EDIT_MODE,\n    CLOSE_ADD_RECIPE_FORM,\n    SELECT_EDIT_RECIPE\n} from './types';\n\n\n// Open add recipe form \nexport const changeEditMode = (mode, recipe = null) => async dispatch => {\n    dispatch({\n        type: CHANGE_EDIT_MODE,\n        payload: {\n            mode,\n            recipe\n        }\n    })\n}\n\n\n\n\n\n// Save new recipe \nexport const saveNewRecipe = formData => async dispatch => {\n    try {\n       \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post(`${url}/api/recipes`, formData, config);\n\n        console.log(res.data);\n\n        dispatch({\n            type: CLOSE_ADD_RECIPE_FORM,\n            payload: res.data.data\n        })\n        \n    } catch (err) {\n        console.log(err.message);\n    }\n} \n\n\n// Select a recipe by id\nexport const selectEditRecipe = id => async dispatch => {\n    try {\n        const res = await axios.get(`${url}/api/recipes?_id=${id}`);\n \n        dispatch({\n            type: SELECT_EDIT_RECIPE,\n            payload: res.data.data[0] \n        })\n        \n    } catch (err) {\n         console.error(err.message);\n    } \n}"]},"metadata":{},"sourceType":"module"}