{"ast":null,"code":"import axios from 'axios';\nimport { url } from '../config';\nexport const CHANGE_EDIT_MODE = 'CHANGE_EDIT_MODE';\nexport const ClOSE_ADD_CATEGORY_FORM = 'CLOSE_ADD_CATEGORY_FORM';\nexport const CLOSE_ADD_RECIPE_FORM = 'CLOSE_ADD_RECIPE_FORM';\nexport const SELECT_EDIT_RECIPE = 'SELECT_EDIT_RECIPE';\nexport const ClEAR_EDIT_STATE = 'CLEAR_EDIT_STATE'; // Get categories\n\nexport const getCategories = () => async dispatch => {\n  try {\n    const res = await axios.get(`${url}/api/categories`);\n    dispatch({\n      type: GET_CATEGORIES,\n      payload: res.data.data\n    });\n  } catch (err) {\n    console.error(err.message);\n  }\n}; // Change edit mode\n\nexport const changeEditMode = mode => async dispatch => {\n  dispatch({\n    type: CHANGE_EDIT_MODE,\n    payload: mode\n  });\n\n  if (mode === null) {\n    dispatch({\n      type: ClEAR_EDIT_STATE\n    });\n  }\n}; // Save new recipe \n\nexport const saveNewRecipe = (formData, imgData) => async dispatch => {\n  try {\n    console.log(imgData);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post(`${url}/api/recipes`, formData, config); // upload image\n\n    const fd = new FormData();\n    fd.append('file', imgData, imgData.name);\n    const configImg = {\n      headers: {\n        'Content-Type': 'multi-part/formdata'\n      }\n    };\n    await axios.put(`${url}/api/recipes/${res.data.data._id}/photo`, fd, configImg);\n    dispatch({\n      type: CLOSE_ADD_RECIPE_FORM,\n      payload: res.data.data\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n}; // Update recipe\n\nexport const updateRecipe = (id, formData) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put(`${url}/api/recipes/${id}`, formData, config);\n    dispatch({\n      type: CLOSE_ADD_RECIPE_FORM,\n      payload: res.data.data\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n}; // Select a recipe by id\n\nexport const selectEditRecipe = id => async dispatch => {\n  try {\n    const res = await axios.get(`${url}/api/recipes?_id=${id}`);\n    dispatch({\n      type: SELECT_EDIT_RECIPE,\n      payload: res.data.data[0]\n    });\n  } catch (err) {\n    console.error(err.message);\n  }\n}; // Delete recipe\n\nexport const deleteRecipe = id => async dispatch => {\n  try {\n    const res = axios.delete(`${url}/api/recipes/${id}`);\n    dispatch({\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n}; // Save new category\n\nexport const saveCategory = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post(`${url}/api/categories`, formData, config);\n    dispatch({\n      type: ClOSE_ADD_CATEGORY_FORM,\n      payload: res.data\n    });\n  } catch (err) {}\n};","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/actions/dashboard.js"],"names":["axios","url","CHANGE_EDIT_MODE","ClOSE_ADD_CATEGORY_FORM","CLOSE_ADD_RECIPE_FORM","SELECT_EDIT_RECIPE","ClEAR_EDIT_STATE","getCategories","dispatch","res","get","type","GET_CATEGORIES","payload","data","err","console","error","message","changeEditMode","mode","saveNewRecipe","formData","imgData","log","config","headers","post","fd","FormData","append","name","configImg","put","_id","updateRecipe","id","selectEditRecipe","deleteRecipe","delete","saveCategory"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { url } from '../config';\n\nexport const CHANGE_EDIT_MODE = 'CHANGE_EDIT_MODE';\nexport const ClOSE_ADD_CATEGORY_FORM = 'CLOSE_ADD_CATEGORY_FORM';\nexport const CLOSE_ADD_RECIPE_FORM = 'CLOSE_ADD_RECIPE_FORM';\nexport const SELECT_EDIT_RECIPE = 'SELECT_EDIT_RECIPE';\nexport const ClEAR_EDIT_STATE = 'CLEAR_EDIT_STATE';\n\n\n// Get categories\nexport const getCategories = () => async dispatch => {\n    try {\n        const res = await axios.get(`${url}/api/categories`);\n \n        dispatch({\n            type: GET_CATEGORIES,\n            payload: res.data.data \n        })\n    } catch (err) {\n         console.error(err.message);\n    } \n }\n \n\n\n// Change edit mode\nexport const changeEditMode = mode => async dispatch => {\n    dispatch({\n        type: CHANGE_EDIT_MODE,\n        payload: mode\n    })\n\n    if(mode === null) {\n        dispatch({\n            type: ClEAR_EDIT_STATE\n        })\n    }\n}\n\n\n\n// Save new recipe \nexport const saveNewRecipe = (formData, imgData) => async dispatch => {\n    try {\n        console.log(imgData);\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post(`${url}/api/recipes`, formData, config);\n        \n        // upload image\n\n        const fd = new FormData();\n        fd.append('file', imgData, imgData.name)\n        \n        const configImg = {\n            headers: {\n                'Content-Type': 'multi-part/formdata'\n            }\n        }\n\n        await axios.put(`${url}/api/recipes/${res.data.data._id}/photo`, fd, configImg)\n\n        dispatch({\n            type: CLOSE_ADD_RECIPE_FORM,\n            payload: res.data.data\n        })\n        \n    } catch (err) {\n        console.log(err.message);\n    }\n} \n\n\n// Update recipe\nexport const updateRecipe = (id, formData) => async dispatch => {\n    try {\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put(`${url}/api/recipes/${id}`, formData, config);\n\n        dispatch({\n            type: CLOSE_ADD_RECIPE_FORM,\n            payload: res.data.data\n        })\n    } catch (err) {\n        console.log(err.message)\n    }\n}\n\n\n// Select a recipe by id\nexport const selectEditRecipe = id => async dispatch => {\n    try {\n        const res = await axios.get(`${url}/api/recipes?_id=${id}`);\n \n        dispatch({\n            type: SELECT_EDIT_RECIPE,\n            payload: res.data.data[0] \n        })\n        \n    } catch (err) {\n         console.error(err.message);\n    } \n}\n\n\n// Delete recipe\nexport const deleteRecipe = id => async dispatch => {\n    try {\n        const res = axios.delete(`${url}/api/recipes/${id}`);\n\n        dispatch({\n            payload: res.data\n        })\n    } catch (err) {\n        console.log(err.message);\n        \n    }\n}\n\n\n// Save new category\nexport const saveCategory = (formData) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post(`${url}/api/categories`, formData, config);\n\n\n        dispatch({\n            type: ClOSE_ADD_CATEGORY_FORM,\n            payload: res.data\n        })\n\n    } catch (err) {\n        \n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}