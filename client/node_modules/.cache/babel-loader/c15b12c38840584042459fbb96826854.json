{"ast":null,"code":"import { GET_RECIPES, SELECT_RECIPE, CLEAR_SELECTED_RECIPE, SELECT_LATEST, GET_ALL_RECIPES } from '../actions/types';\nconst initialState = {\n  recipes: [],\n  selectedRecipe: {},\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_RECIPES:\n      return { ...state,\n        recipes: payload,\n        loading: false\n      };\n\n    case SELECT_RECIPE:\n      return { ...state,\n        selectedRecipe: payload,\n        loading: false\n      };\n\n    case SELECT_LATEST:\n      return { ...state,\n        selectedRecipe: payload,\n        loading: false\n      };\n\n    case CLEAR_SELECTED_RECIPE:\n      return { ...state,\n        selectedRecipe: {},\n        loading: true\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/reducers/recipe.js"],"names":["GET_RECIPES","SELECT_RECIPE","CLEAR_SELECTED_RECIPE","SELECT_LATEST","GET_ALL_RECIPES","initialState","recipes","selectedRecipe","loading","error","state","action","type","payload"],"mappings":"AAAA,SACIA,WADJ,EAEIC,aAFJ,EAGIC,qBAHJ,EAIIC,aAJJ,EAKIC,eALJ,QAMO,kBANP;AAQA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,cAAc,EAAE,EAFC;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AAClD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAOC,IAAP;AAEI,SAAKZ,WAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHJ,QAAAA,OAAO,EAAEO,OAFN;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKP,aAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHH,QAAAA,cAAc,EAAEM,OAFb;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKL,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,cAAc,EAAEM,OAFb;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKN,qBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,cAAc,EAAE,EAFb;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ;AACI,aAAO,EACH,GAAGE;AADA,OAAP;AA/BR;AAoCH","sourcesContent":["import { \n    GET_RECIPES,\n    SELECT_RECIPE,\n    CLEAR_SELECTED_RECIPE,\n    SELECT_LATEST,\n    GET_ALL_RECIPES\n} from '../actions/types';\n\nconst initialState = {\n    recipes: [],\n    selectedRecipe: {},\n    loading: true,\n    error: {}\n}\n\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n\n        case GET_RECIPES:\n            return {\n                ...state,\n                recipes: payload,\n                loading: false\n            }\n\n        case SELECT_RECIPE:\n            return {\n                ...state,\n                selectedRecipe: payload,\n                loading: false\n            }\n\n        case SELECT_LATEST:\n            return {\n                ...state,\n                selectedRecipe: payload,\n                loading: false\n            }\n\n        case CLEAR_SELECTED_RECIPE:\n            return {\n                ...state,\n                selectedRecipe: {},\n                loading: true\n            }\n\n        default: \n            return {\n                ...state\n            }\n\n    }\n} "]},"metadata":{},"sourceType":"module"}