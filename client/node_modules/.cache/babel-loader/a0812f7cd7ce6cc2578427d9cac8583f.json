{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/ReactHillBrewing/client/src/components/dashboard/edits/AddRecipeForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { saveNewRecipe, updateRecipe, deleteRecipe } from '../../../actions/dashboard';\nimport { url } from '../../../config';\nimport Alert from '../layout/Alert';\nimport { setAlert } from '../../../actions/alert';\nimport ParagraphInput from './ParagraphInput';\n\nconst AddRecipeForm = ({\n  saveNewRecipe,\n  updateRecipe,\n  setAlert,\n  deleteRecipe,\n  loggedInUserId,\n  categories,\n  dashboard: {\n    editMode,\n    editRecipe\n  }\n}) => {\n  const [formData, setFormdata] = useState({\n    title: '',\n    subtitle: '',\n    category: ''\n  });\n  const [paragraphData, setParagraphData] = useState([{\n    title: 'MALT/GRAIN BILL',\n    body: ''\n  }, {\n    title: 'HOPS/SCHEDULE',\n    body: ''\n  }, {\n    title: 'YEAST',\n    body: ''\n  }, {\n    title: 'DIRECTIONS',\n    body: ''\n  }]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const {\n    title,\n    subtitle,\n    category\n  } = formData;\n  useEffect(() => {\n    if (editMode === 'editRecipe') {\n      const {\n        _id,\n        category,\n        title,\n        subtitle,\n        user,\n        paragraphs,\n        image\n      } = editRecipe;\n      setFormdata({\n        title,\n        subtitle,\n        category,\n        image\n      });\n      setParagraphData(paragraphs);\n    }\n  }, []);\n\n  const onChange = e => {\n    setFormdata({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onTitleChange = e => {\n    setParagraphData([...paragraphData], paragraphData[e.target.name].title = e.target.value);\n  };\n\n  const onBodyChange = e => {\n    setParagraphData([...paragraphData], paragraphData[e.target.name].body = e.target.value);\n  };\n\n  const selectImageFile = e => {\n    e.preventDefault();\n    setSelectedImage(e.target.files[0]);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (title === '') {\n      return setAlert('Please fill in title', 'danger');\n    }\n\n    if (selectedImage) {\n      const fd = new FormData();\n      fd.append('imageFile', selectedImage, selectedImage.name);\n      console.log(fd);\n    }\n\n    const paragraphs = paragraphData.filter(paragraph => paragraph.body !== '');\n    const packagedFormData = {\n      user: loggedInUserId,\n      title,\n      subtitle,\n      category,\n      paragraphs\n    };\n    editMode === 'addRecipe' ? saveNewRecipe(packagedFormData) : updateRecipe(editRecipe._id, packagedFormData); // eslint-disable-next-line no-restricted-globals\n\n    location.reload();\n  };\n\n  const onDelete = () => {\n    // eslint-disable-next-line no-restricted-globals\n    const yes = confirm(\"Sure to delete?\");\n\n    if (yes) {\n      deleteRecipe(editRecipe._id);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dash-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dash-card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Add new Recipe\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dash-card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, editRecipe && /*#__PURE__*/React.createElement(\"img\", {\n    className: \"preview-image\",\n    src: `${url}/uploads/recipe-img/${editRecipe.image}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"custom-file\",\n    type: \"file\",\n    accept: \".jpg, .jpeg, .png\",\n    onChange: selectImageFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, \"Recipe Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"Enter recipe name\",\n    name: \"title\",\n    value: title,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, \"Subtitle\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"subtitle\",\n    type: \"text\",\n    placeholder: \"Enter subtitle\",\n    name: \"subtitle\",\n    value: subtitle,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"category\",\n    className: \"select\",\n    name: \"category\",\n    value: category,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    defaultValue: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, \"Select a category\"), categories.filter(category => category.title !== 'Latest Recipe').map((category, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: category.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 41\n    }\n  }, category.title)))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 27\n    }\n  }), paragraphData.map((paragraph, index) => /*#__PURE__*/React.createElement(ParagraphInput, {\n    key: index,\n    index: index,\n    paragraph: paragraph,\n    onTitleChange: onTitleChange,\n    onBodyChange: onBodyChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"center edit-btn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, \"Save recipe\"), editMode === 'editRecipe' && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"center edit-btn\",\n    onClick: onDelete,\n    style: {\n      marginLeft: '10px',\n      backgroundColor: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 56\n    }\n  }, \"Delete Recipe\")))));\n};\n\nconst mapStateToProps = state => ({\n  dashboard: state.dashboard,\n  loggedInUserId: state.auth.user._id,\n  categories: state.category.categories\n});\n\nexport default connect(mapStateToProps, {\n  saveNewRecipe,\n  updateRecipe,\n  deleteRecipe,\n  setAlert\n})(AddRecipeForm);","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/components/dashboard/edits/AddRecipeForm.js"],"names":["React","useState","useEffect","connect","saveNewRecipe","updateRecipe","deleteRecipe","url","Alert","setAlert","ParagraphInput","AddRecipeForm","loggedInUserId","categories","dashboard","editMode","editRecipe","formData","setFormdata","title","subtitle","category","paragraphData","setParagraphData","body","selectedImage","setSelectedImage","_id","user","paragraphs","image","onChange","e","target","name","value","onTitleChange","onBodyChange","selectImageFile","preventDefault","files","onSubmit","fd","FormData","append","console","log","filter","paragraph","packagedFormData","location","reload","onDelete","yes","confirm","map","index","marginLeft","backgroundColor","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { saveNewRecipe, updateRecipe, deleteRecipe } from '../../../actions/dashboard';\nimport { url } from '../../../config';\nimport Alert from '../layout/Alert';\nimport { setAlert } from '../../../actions/alert';\nimport ParagraphInput from './ParagraphInput';\n\n\nconst AddRecipeForm = ({ saveNewRecipe, updateRecipe, setAlert, deleteRecipe, loggedInUserId, categories, dashboard: { editMode, editRecipe } }) => {\n    const [formData, setFormdata] = useState({\n        title: '',\n        subtitle: '',\n        category: ''\n    });\n\n    const [paragraphData, setParagraphData] = useState([\n        { title: 'MALT/GRAIN BILL', body: '' },\n        { title: 'HOPS/SCHEDULE', body: '' },\n        { title: 'YEAST', body: '' },\n        { title: 'DIRECTIONS', body: '' }\n    ])\n\n    const [selectedImage, setSelectedImage] = useState(null);\n\n    const { title, subtitle, category } = formData;\n\n\n    useEffect(() => {\n        if (editMode === 'editRecipe') {\n            const { _id, category, title, subtitle, user, paragraphs, image } = editRecipe;\n\n            setFormdata({\n                title,\n                subtitle,\n                category,\n                image\n            })\n\n            setParagraphData(paragraphs)\n        }\n    }, [])\n\n    const onChange = (e) => {\n        setFormdata({\n            ...formData,\n            [e.target.name]: e.target.value\n        })\n    };\n\n    const onTitleChange = (e) => {\n        setParagraphData([\n\n            ...paragraphData\n            ],\n            paragraphData[e.target.name].title = e.target.value\n        )\n    }\n\n    const onBodyChange = (e) => {\n        setParagraphData([\n\n            ...paragraphData\n            ],\n            paragraphData[e.target.name].body = e.target.value\n        )\n    }\n\n\n    const selectImageFile = (e) => {\n        e.preventDefault();\n\n        setSelectedImage(e.target.files[0]);\n    };\n\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (title === '') {\n            return setAlert('Please fill in title', 'danger')\n        }\n\n        if (selectedImage) {\n            const fd = new FormData();\n            fd.append('imageFile', selectedImage, selectedImage.name)\n            console.log(fd);\n        }\n\n        const paragraphs = paragraphData.filter(paragraph => paragraph.body !== '');\n\n        const packagedFormData = {\n            user: loggedInUserId,\n            title,\n            subtitle,\n            category,\n            paragraphs\n        };\n\n\n        editMode === 'addRecipe' ? saveNewRecipe(packagedFormData) : updateRecipe(editRecipe._id, packagedFormData);\n\n        // eslint-disable-next-line no-restricted-globals\n        location.reload();\n    }\n\n\n    const onDelete = () => {\n        // eslint-disable-next-line no-restricted-globals\n        const yes = confirm(\"Sure to delete?\");\n\n        if (yes) {\n            deleteRecipe(editRecipe._id);\n        }\n    }\n\n\n    return (\n        <div className=\"dash-card\">\n            <div className=\"dash-card-header\">\n                Add new Recipe\n            </div>\n            <div className=\"dash-card-body\">\n                <Alert />\n                <form onSubmit={onSubmit}>\n                    {editRecipe && (<img className=\"preview-image\" src={`${url}/uploads/recipe-img/${editRecipe.image}`} />)}\n\n                    <input className=\"custom-file\" type=\"file\" accept=\".jpg, .jpeg, .png\" onChange={selectImageFile} />\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Recipe Name</label>\n                        <input id=\"name\" type=\"text\" placeholder=\"Enter recipe name\" name=\"title\" value={title} onChange={onChange} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"subtitle\">Subtitle</label>\n                        <input id=\"subtitle\" type=\"text\" placeholder=\"Enter subtitle\" name=\"subtitle\" value={subtitle} onChange={onChange} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"category\">Category</label>\n                        <select id=\"category\" className=\"select\" name=\"category\" value={category} onChange={onChange}>\n                            <option value=\"\" defaultValue>Select a category</option>\n                            \n\n                            {\n                                categories.filter(category => category.title !== 'Latest Recipe')\n                                    .map((category, index) => (\n                                        <option key={index} value={category.title} >{category.title}</option>\n                                    ))\n                            }\n\n\n                        </select>\n                    </div>\n                    <br /><br />\n\n                    {\n                        paragraphData.map((paragraph, index) => (\n                            <ParagraphInput key={index} index={index} paragraph={paragraph} onTitleChange={onTitleChange} onBodyChange={onBodyChange} />\n                        ))\n                    }\n\n                    <div className=\"edit-buttons\">\n\n                        <button className=\"center edit-btn\" type=\"submit\">Save recipe</button>\n                        {editMode === 'editRecipe' && (<button className=\"center edit-btn\" onClick={onDelete} style={{ marginLeft: '10px', backgroundColor: 'red' }}>Delete Recipe</button>)}\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    dashboard: state.dashboard,\n    loggedInUserId: state.auth.user._id,\n    categories: state.category.categories\n})\n\nexport default connect(mapStateToProps, { saveNewRecipe, updateRecipe, deleteRecipe, setAlert })(AddRecipeForm);\n"]},"metadata":{},"sourceType":"module"}