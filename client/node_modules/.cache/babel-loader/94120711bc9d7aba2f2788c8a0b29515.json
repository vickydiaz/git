{"ast":null,"code":"import React,{Fragment,useEffect}from'react';import{connect}from'react-redux';import{url}from'../../../config';import{selectRecipe}from'../../../actions/recipe';import Spinner from'../layout/Spinner';var Recipe=function Recipe(_ref){var _ref$recipe=_ref.recipe,_ref$recipe$selectedR=_ref$recipe.selectedRecipe,title=_ref$recipe$selectedR.title,subtitle=_ref$recipe$selectedR.subtitle,image=_ref$recipe$selectedR.image,paragraphs=_ref$recipe$selectedR.paragraphs,loading=_ref$recipe.loading,match=_ref.match,selectRecipe=_ref.selectRecipe;useEffect(function(){selectRecipe(match.params.slug);},[match.params.slug,selectRecipe]);var recipeImage=\"\".concat(url,\"/uploads/recipe-img/\").concat(image);return!title?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"main-container\",id:\"main-container\"},/*#__PURE__*/React.createElement(\"h1\",null,title),/*#__PURE__*/React.createElement(\"p\",{className:\"muted\"},subtitle),/*#__PURE__*/React.createElement(\"div\",{className:\"blog-img\",style:{backgroundImage:\"url(\".concat(recipeImage,\")\")}}),paragraphs.map(function(paragraph){return/*#__PURE__*/React.createElement(\"div\",{className:\"paragraph-group\"},/*#__PURE__*/React.createElement(\"h3\",null,paragraph.title),/*#__PURE__*/React.createElement(\"p\",null,paragraph.body.split(\"\\n\").map(function(item){return/*#__PURE__*/React.createElement(\"span\",null,item,/*#__PURE__*/React.createElement(\"br\",null));})));})));};var mapStateToProps=function mapStateToProps(state){return{recipe:state.recipe};};export default connect(mapStateToProps,{selectRecipe:selectRecipe})(Recipe);","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/components/homepage/main/Recipe.js"],"names":["React","Fragment","useEffect","connect","url","selectRecipe","Spinner","Recipe","recipe","selectedRecipe","title","subtitle","image","paragraphs","loading","match","params","slug","recipeImage","backgroundImage","map","paragraph","body","split","item","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,GAAT,KAAoB,iBAApB,CACA,OAASC,YAAT,KAA6B,yBAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAGQ,sBAFnBC,MAEmB,mCAFVC,cAEU,CAFQC,KAER,uBAFQA,KAER,CAFeC,QAEf,uBAFeA,QAEf,CAFyBC,KAEzB,uBAFyBA,KAEzB,CAFgCC,UAEhC,uBAFgCA,UAEhC,CAF8CC,OAE9C,aAF8CA,OAE9C,CADnBC,KACmB,MADnBA,KACmB,CAAnBV,YAAmB,MAAnBA,YAAmB,CAEnBH,SAAS,CAAC,UAAM,CACZG,YAAY,CAACU,KAAK,CAACC,MAAN,CAAaC,IAAd,CAAZ,CACH,CAFQ,CAEN,CAACF,KAAK,CAACC,MAAN,CAAaC,IAAd,CAAoBZ,YAApB,CAFM,CAAT,CAIA,GAAIa,CAAAA,WAAW,WAAMd,GAAN,gCAAgCQ,KAAhC,CAAf,CAEA,MAEI,CAACF,KAAD,cAAS,oBAAC,OAAD,MAAT,cAEA,oBAAC,QAAD,mBACI,2BAAK,SAAS,CAAC,gBAAf,CAAgC,EAAE,CAAC,gBAAnC,eACI,8BAAKA,KAAL,CADJ,cAEI,yBAAG,SAAS,CAAC,OAAb,EAAsBC,QAAtB,CAFJ,cAGI,2BAAK,SAAS,CAAC,UAAf,CAA0B,KAAK,CAAE,CAAEQ,eAAe,eAASD,WAAT,KAAjB,CAAjC,EAHJ,CAKKL,UAAU,CAACO,GAAX,CAAe,SAAAC,SAAS,qBACrB,2BAAK,SAAS,CAAC,iBAAf,eACA,8BAAKA,SAAS,CAACX,KAAf,CADA,cAEA,6BACKW,SAAS,CAACC,IAAV,CAAeC,KAAf,CAAqB,IAArB,EAA2BH,GAA3B,CAA+B,SAASI,IAAT,CAAc,CAC1C,mBACI,gCACKA,IADL,cAEI,8BAFJ,CADJ,CAMH,CAPA,CADL,CAFA,CADqB,EAAxB,CALL,CADJ,CAJJ,CA4BH,CAvCD,CA0CA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BlB,MAAM,CAAEkB,KAAK,CAAClB,MADgB,CAAL,EAA7B,CAIA,cAAeL,CAAAA,OAAO,CAACsB,eAAD,CAAkB,CAAEpB,YAAY,CAAZA,YAAF,CAAlB,CAAP,CAA2CE,MAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { url } from '../../../config';\nimport { selectRecipe } from '../../../actions/recipe';\nimport Spinner from '../layout/Spinner';\n\nconst Recipe = ({ \n    recipe: {selectedRecipe: { title, subtitle, image, paragraphs }, loading}, \n    match, \n    selectRecipe }) => {\n        \n    useEffect(() => {\n        selectRecipe(match.params.slug);\n    }, [match.params.slug, selectRecipe]);\n\n    let recipeImage = `${url}/uploads/recipe-img/${image}`;\n\n    return (\n\n        !title ? <Spinner /> : \n\n        <Fragment>\n            <div className=\"main-container\" id=\"main-container\">\n                <h1>{title}</h1>\n                <p className=\"muted\">{subtitle}</p>\n                <div className=\"blog-img\" style={{ backgroundImage: `url(${recipeImage})` }}></div>\n\n                {paragraphs.map(paragraph => (\n                    <div className=\"paragraph-group\">\n                    <h3>{paragraph.title}</h3>\n                    <p>\n                        {paragraph.body.split(\"\\n\").map(function(item){\n                            return (\n                                <span>\n                                    {item}\n                                    <br />\n                                </span>\n                            )\n                        })}\n                    </p>\n                </div>\n                ))}\n            </div>\n        </Fragment>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    recipe: state.recipe\n});\n\nexport default connect(mapStateToProps, { selectRecipe })(Recipe);\n"]},"metadata":{},"sourceType":"module"}