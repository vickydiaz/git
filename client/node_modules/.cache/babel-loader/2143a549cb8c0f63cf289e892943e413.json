{"ast":null,"code":"import axios from 'axios';\nimport { url } from '../config';\nexport const CHANGE_EDIT_MODE = 'CHANGE_EDIT_MODE';\nexport const ClOSE_ADD_CATEGORY_FORM = 'CLOSE_ADD_CATEGORY_FORM';\nexport const CLOSE_ADD_RECIPE_FORM = 'CLOSE_ADD_RECIPE_FORM';\nexport const SELECT_EDIT_RECIPE = 'SELECT_EDIT_RECIPE'; // Change edit mode\n\nexport const changeEditMode = mode => async dispatch => {\n  dispatch({\n    type: CHANGE_EDIT_MODE,\n    payload: mode\n  });\n\n  if (mode === null) {\n    dispatch({\n      type: ClEAR_EDIT_STATE\n    });\n  }\n}; // Save new recipe \n\nexport const saveNewRecipe = (formData, imgData) => async dispatch => {\n  try {\n    console.log(imgData);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post(`${url}/api/recipes`, formData, config); // upload image\n\n    const fd = new FormData();\n    fd.append('file', imgData, imgData.name);\n    const configImg = {\n      headers: {\n        'Content-Type': 'multi-part/formdata'\n      }\n    };\n    await axios.put(`${url}/api/recipes/${res.data.data._id}/photo`, fd, configImg);\n    dispatch({\n      type: CLOSE_ADD_RECIPE_FORM,\n      payload: res.data.data\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n}; // Update recipe\n\nexport const updateRecipe = (id, formData) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put(`${url}/api/recipes/${id}`, formData, config);\n    dispatch({\n      type: CLOSE_ADD_RECIPE_FORM,\n      payload: res.data.data\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n}; // Select a recipe by id\n\nexport const selectEditRecipe = id => async dispatch => {\n  try {\n    const res = await axios.get(`${url}/api/recipes?_id=${id}`);\n    dispatch({\n      type: SELECT_EDIT_RECIPE,\n      payload: res.data.data[0]\n    });\n  } catch (err) {\n    console.error(err.message);\n  }\n}; // Delete recipe\n\nexport const deleteRecipe = id => async dispatch => {\n  try {\n    const res = axios.delete(`${url}/api/recipes/${id}`);\n    dispatch({\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n}; // Save new category\n\nexport const saveCategory = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post(`${url}/api/categories`, formData, config);\n    dispatch({\n      type: ClOSE_ADD_CATEGORY_FORM,\n      payload: res.data\n    });\n  } catch (err) {}\n}; // Save image","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/actions/dashboard.js"],"names":["axios","url","CHANGE_EDIT_MODE","ClOSE_ADD_CATEGORY_FORM","CLOSE_ADD_RECIPE_FORM","SELECT_EDIT_RECIPE","changeEditMode","mode","dispatch","type","payload","ClEAR_EDIT_STATE","saveNewRecipe","formData","imgData","console","log","config","headers","res","post","fd","FormData","append","name","configImg","put","data","_id","err","message","updateRecipe","id","selectEditRecipe","get","error","deleteRecipe","delete","saveCategory"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { url } from '../config';\n\nexport const CHANGE_EDIT_MODE = 'CHANGE_EDIT_MODE';\nexport const ClOSE_ADD_CATEGORY_FORM = 'CLOSE_ADD_CATEGORY_FORM';\nexport const CLOSE_ADD_RECIPE_FORM = 'CLOSE_ADD_RECIPE_FORM';\nexport const SELECT_EDIT_RECIPE = 'SELECT_EDIT_RECIPE';\n\n// Change edit mode\nexport const changeEditMode = mode => async dispatch => {\n    dispatch({\n        type: CHANGE_EDIT_MODE,\n        payload: mode\n    })\n\n    if(mode === null) {\n        dispatch({\n            type: ClEAR_EDIT_STATE\n        })\n    }\n}\n\n\n\n// Save new recipe \nexport const saveNewRecipe = (formData, imgData) => async dispatch => {\n    try {\n        console.log(imgData);\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post(`${url}/api/recipes`, formData, config);\n        \n        // upload image\n\n        const fd = new FormData();\n        fd.append('file', imgData, imgData.name)\n        \n        const configImg = {\n            headers: {\n                'Content-Type': 'multi-part/formdata'\n            }\n        }\n\n        await axios.put(`${url}/api/recipes/${res.data.data._id}/photo`, fd, configImg)\n\n        dispatch({\n            type: CLOSE_ADD_RECIPE_FORM,\n            payload: res.data.data\n        })\n        \n    } catch (err) {\n        console.log(err.message);\n    }\n} \n\n\n// Update recipe\nexport const updateRecipe = (id, formData) => async dispatch => {\n    try {\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put(`${url}/api/recipes/${id}`, formData, config);\n\n        dispatch({\n            type: CLOSE_ADD_RECIPE_FORM,\n            payload: res.data.data\n        })\n    } catch (err) {\n        console.log(err.message)\n    }\n}\n\n\n// Select a recipe by id\nexport const selectEditRecipe = id => async dispatch => {\n    try {\n        const res = await axios.get(`${url}/api/recipes?_id=${id}`);\n \n        dispatch({\n            type: SELECT_EDIT_RECIPE,\n            payload: res.data.data[0] \n        })\n        \n    } catch (err) {\n         console.error(err.message);\n    } \n}\n\n\n// Delete recipe\nexport const deleteRecipe = id => async dispatch => {\n    try {\n        const res = axios.delete(`${url}/api/recipes/${id}`);\n\n        dispatch({\n            payload: res.data\n        })\n    } catch (err) {\n        console.log(err.message);\n        \n    }\n}\n\n\n// Save new category\nexport const saveCategory = (formData) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post(`${url}/api/categories`, formData, config);\n\n\n        dispatch({\n            type: ClOSE_ADD_CATEGORY_FORM,\n            payload: res.data\n        })\n\n    } catch (err) {\n        \n    }\n}\n\n\n// Save image"]},"metadata":{},"sourceType":"module"}