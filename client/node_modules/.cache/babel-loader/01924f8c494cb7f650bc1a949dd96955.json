{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/ReactHillBrewing/client/src/components/categories/CategoryBand.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport CategoryItem from './CategoryItem';\nimport { connect } from 'react-redux';\nimport { getCategories } from '../../actions/category';\nimport Spinner from '../homepage/layout/Spinner';\n\nconst CategoryBand = ({\n  category: {\n    categories,\n    loading\n  },\n  getCategories\n}) => {\n  useEffect(() => {\n    getCategories();\n  }, [getCategories]);\n  return loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"categories\",\n    id: \"categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, categories.map(category => /*#__PURE__*/React.createElement(CategoryItem, {\n    key: category._id,\n    categories: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  category: state.category\n});\n\nexport default connect(mapStateToProps, {\n  getCategories\n})(CategoryBand);","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/components/categories/CategoryBand.js"],"names":["React","Fragment","useEffect","CategoryItem","connect","getCategories","Spinner","CategoryBand","category","categories","loading","map","_id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,OAAP,MAAoB,4BAApB;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAClBC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GADQ;AAElBL,EAAAA;AAFkB,CAAD,KAGX;AAENH,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,aAAa;AAChB,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAKA,SAEIK,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAEP,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,EAAE,EAAC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQD,UAAU,CAACE,GAAX,CAAeH,QAAQ,iBACnB,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,QAAQ,CAACI,GAA5B;AAAiC,IAAA,UAAU,EAAEJ,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHR,CADJ,CADJ,CAJJ;AAkBH,CA5BD;;AA+BA,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAC9BN,EAAAA,QAAQ,EAAEM,KAAK,CAACN;AADc,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACS,eAAD,EAAkB;AAAER,EAAAA;AAAF,CAAlB,CAAP,CAA4CE,YAA5C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport CategoryItem from './CategoryItem';\nimport { connect } from 'react-redux';\nimport { getCategories } from '../../actions/category';\nimport Spinner from '../homepage/layout/Spinner';\n\n\nconst CategoryBand = ({ \n    category: { categories, loading }, \n    getCategories \n    }) => {\n\n    useEffect(() => {\n        getCategories();\n    }, [getCategories]);  \n    \n\n    return (\n\n        loading ? <Spinner /> : \n\n        <Fragment>\n            <div className=\"categories\" id=\"categories\">\n                <div className=\"container\">\n\n                    {\n                        categories.map(category => (\n                            <CategoryItem key={category._id} categories={category} />\n                        ))\n                    }\n\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    category: state.category\n})\n\nexport default connect(mapStateToProps, { getCategories })(CategoryBand);"]},"metadata":{},"sourceType":"module"}