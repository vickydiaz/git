{"ast":null,"code":"import React,{useEffect,Fragment}from'react';import{connect}from'react-redux';import{getLatest}from'../../../actions/recipe';import{url}from'../../../config';import Spinner from'../layout/Spinner';var LatestRecipe=function LatestRecipe(_ref){var _ref$selectedRecipe=_ref.selectedRecipe,title=_ref$selectedRecipe.title,subtitle=_ref$selectedRecipe.subtitle,image=_ref$selectedRecipe.image,paragraphs=_ref$selectedRecipe.paragraphs,getLatest=_ref.getLatest;useEffect(function(){getLatest();},[getLatest]);var recipeImage=\"\".concat(url,\"/uploads/recipe-img/\").concat(image);return!title?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"main-container\",id:\"main-container\"},/*#__PURE__*/React.createElement(\"h1\",null,title),/*#__PURE__*/React.createElement(\"p\",{className:\"muted\"},subtitle),/*#__PURE__*/React.createElement(\"div\",{className:\"blog-img\",style:{backgroundImage:\"url(\".concat(recipeImage,\")\")}}),paragraphs.map(function(paragraph,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"paragraph-group\"},/*#__PURE__*/React.createElement(\"h3\",null,paragraph.title),/*#__PURE__*/React.createElement(\"p\",null,paragraph.body.replace(/&lt;br>/g,'<br>')));})));};var mapStateToProps=function mapStateToProps(state){return{selectedRecipe:state.recipe.selectedRecipe};};export default connect(mapStateToProps,{getLatest:getLatest})(LatestRecipe);","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/components/homepage/main/LatestRecipe.js"],"names":["React","useEffect","Fragment","connect","getLatest","url","Spinner","LatestRecipe","selectedRecipe","title","subtitle","image","paragraphs","recipeImage","backgroundImage","map","paragraph","index","body","replace","mapStateToProps","state","recipe"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,SAAT,KAA0B,yBAA1B,CACA,OAASC,GAAT,KAAoB,iBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA2E,8BAAxEC,cAAwE,CAAtDC,KAAsD,qBAAtDA,KAAsD,CAA/CC,QAA+C,qBAA/CA,QAA+C,CAArCC,KAAqC,qBAArCA,KAAqC,CAA9BC,UAA8B,qBAA9BA,UAA8B,CAAhBR,SAAgB,MAAhBA,SAAgB,CAC5FH,SAAS,CAAC,UAAM,CACZG,SAAS,GACZ,CAFQ,CAEN,CAACA,SAAD,CAFM,CAAT,CAIA,GAAIS,CAAAA,WAAW,WAAMR,GAAN,gCAAgCM,KAAhC,CAAf,CAEA,MAEI,CAACF,KAAD,cAAS,oBAAC,OAAD,MAAT,cAEI,oBAAC,QAAD,mBACI,2BAAK,SAAS,CAAC,gBAAf,CAAgC,EAAE,CAAC,gBAAnC,eACI,8BAAKA,KAAL,CADJ,cAEI,yBAAG,SAAS,CAAC,OAAb,EAAsBC,QAAtB,CAFJ,cAGI,2BAAK,SAAS,CAAC,UAAf,CAA0B,KAAK,CAAE,CAAEI,eAAe,eAASD,WAAT,KAAjB,CAAjC,EAHJ,CAKKD,UAAU,CAACG,GAAX,CAAe,SAACC,SAAD,CAAYC,KAAZ,qBACZ,2BAAK,GAAG,CAAEA,KAAV,CAAiB,SAAS,CAAC,iBAA3B,eACI,8BAAKD,SAAS,CAACP,KAAf,CADJ,cAEI,6BAAIO,SAAS,CAACE,IAAV,CAAeC,OAAf,CAAuB,UAAvB,CAAmC,MAAnC,CAAJ,CAFJ,CADY,EAAf,CALL,CADJ,CAJR,CAmBH,CA1BD,CA4BA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9Bb,cAAc,CAAEa,KAAK,CAACC,MAAN,CAAad,cADC,CAAL,EAA7B,CAKA,cAAeL,CAAAA,OAAO,CAACiB,eAAD,CAAkB,CAAEhB,SAAS,CAATA,SAAF,CAAlB,CAAP,CAAwCG,YAAxC,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getLatest } from '../../../actions/recipe';\nimport { url } from '../../../config';\nimport Spinner from '../layout/Spinner';\n\nconst LatestRecipe = ({ selectedRecipe: { title, subtitle, image, paragraphs }, getLatest }) => {\n    useEffect(() => {\n        getLatest();\n    }, [getLatest]);\n\n    let recipeImage = `${url}/uploads/recipe-img/${image}`;\n\n    return (\n\n        !title ? <Spinner /> :\n\n            <Fragment>\n                <div className=\"main-container\" id=\"main-container\">\n                    <h1>{title}</h1>\n                    <p className=\"muted\">{subtitle}</p>\n                    <div className=\"blog-img\" style={{ backgroundImage: `url(${recipeImage})` }}></div>\n\n                    {paragraphs.map((paragraph, index) => (\n                        <div key={index} className=\"paragraph-group\">\n                            <h3>{paragraph.title}</h3>\n                            <p>{paragraph.body.replace(/&lt;br>/g, '<br>')}</p>\n                        </div>\n                    ))}\n                </div>\n            </Fragment>\n    )\n}\n\nconst mapStateToProps = state => ({\n    selectedRecipe: state.recipe.selectedRecipe\n});\n\n\nexport default connect(mapStateToProps, { getLatest })(LatestRecipe);"]},"metadata":{},"sourceType":"module"}