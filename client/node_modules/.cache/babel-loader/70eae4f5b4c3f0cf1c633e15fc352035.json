{"ast":null,"code":"import axios from 'axios';\nimport { url } from '../config';\nimport { LOGIN_SUCCESS, GET_USER } from './types'; // Load user\n\nexport const loadUser = () => async dispatch => {\n  if (!document.cookie) {\n    console.log('No cookie stored');\n  }\n\n  try {\n    const res = await axios.get(url + '/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Login user\n\nexport const login = (name, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    password\n  });\n\n  try {\n    const res = await axios.post(`${url}/api/auth/login`, body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n};","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/actions/auth.js"],"names":["axios","url","LOGIN_SUCCESS","GET_USER","loadUser","dispatch","document","cookie","console","log","res","get","type","USER_LOADED","payload","data","err","AUTH_ERROR","login","name","password","config","headers","body","JSON","stringify","post","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,SACIC,aADJ,EAEIC,QAFJ,QAGO,SAHP,C,CAMA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC5C,MAAG,CAACC,QAAQ,CAACC,MAAb,EAAqB;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;;AAED,MAAI;AAEA,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUV,GAAG,GAAG,WAAhB,CAAlB;AAEAI,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEC,WADD;AAELC,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFR,KAAD,CAAR;AAKH,GATD,CASE,OAAOC,GAAP,EAAY;AACVX,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEK;AADD,KAAD,CAAR;AAGH;AACJ,CAnBM,C,CAqBP;;AACA,OAAO,MAAMC,KAAK,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB,MAAMf,QAAN,IAAkB;AAEvD,QAAMgB,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACN,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAf,CAAb;;AAEA,MAAI;AAEA,UAAMV,GAAG,GAAG,MAAMV,KAAK,CAAC0B,IAAN,CAAY,GAAEzB,GAAI,iBAAlB,EAAoCsB,IAApC,EAA0CF,MAA1C,CAAlB;AAEAhB,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEV,aADD;AAELY,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFR,KAAD,CAAR;AAKH,GATD,CASE,OAAOC,GAAP,EAAY;AACVR,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACW,OAAhB;AACH;AACJ,CAtBM","sourcesContent":["import axios from 'axios';\nimport { url } from '../config';\n\nimport {\n    LOGIN_SUCCESS,\n    GET_USER\n} from './types';\n\n\n// Load user\nexport const loadUser = () => async dispatch => {\n    if(!document.cookie) {\n        console.log('No cookie stored');\n    }\n\n    try {\n        \n        const res = await axios.get(url + '/api/auth');\n\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: AUTH_ERROR\n        })\n    }   \n}\n\n// Login user\nexport const login = (name, password) => async dispatch => {\n   \n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({name, password});\n     \n    try {\n\n        const res = await axios.post(`${url}/api/auth/login`, body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        })\n        \n    } catch (err) {\n        console.log(err.message);\n    }\n}"]},"metadata":{},"sourceType":"module"}