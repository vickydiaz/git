{"ast":null,"code":"import axios from 'axios';\nimport { url } from '../config';\nimport { CHANGE_EDIT_MODE, CLOSE_ADD_RECIPE_FORM, SELECT_EDIT_RECIPE, ClOSE_ADD_CATEGORY_FORM } from './types'; // Open add recipe form \n\nexport const changeEditMode = mode => async dispatch => {\n  dispatch({\n    type: CHANGE_EDIT_MODE,\n    payload: mode\n  });\n}; // Save new recipe \n\nexport const saveNewRecipe = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post(`${url}/api/recipes`, formData, config);\n    dispatch({\n      type: CLOSE_ADD_RECIPE_FORM,\n      payload: res.data.data\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n}; // Update recipe\n\nexport const updateRecipe = (id, formData) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put(`${url}/api/recipes/${id}`, formData, config);\n    dispatch({\n      type: CLOSE_ADD_RECIPE_FORM,\n      payload: res.data.data\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n}; // Select a recipe by id\n\nexport const selectEditRecipe = id => async dispatch => {\n  try {\n    const res = await axios.get(`${url}/api/recipes?_id=${id}`);\n    dispatch({\n      type: SELECT_EDIT_RECIPE,\n      payload: res.data.data[0]\n    });\n  } catch (err) {\n    console.error(err.message);\n  }\n}; // Delete recipe\n\nexport const deleteRecipe = id => async dispatch => {\n  try {\n    const res = axios.delete(`${url}/api/recipes/${id}`);\n  } catch (err) {\n    console.log(err.message);\n  }\n}; // Save new category\n\nexport const saveCategory = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post(`${url}/api/categories`, formData, config);\n    dispatch({\n      type: ClOSE_ADD_CATEGORY_FORM,\n      payload: res.data\n    });\n  } catch (err) {}\n}; // Save image","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/actions/dashboard.js"],"names":["axios","url","CHANGE_EDIT_MODE","CLOSE_ADD_RECIPE_FORM","SELECT_EDIT_RECIPE","ClOSE_ADD_CATEGORY_FORM","changeEditMode","mode","dispatch","type","payload","saveNewRecipe","formData","config","headers","res","post","data","err","console","log","message","updateRecipe","id","put","selectEditRecipe","get","error","deleteRecipe","delete","saveCategory"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { url } from '../config';\nimport { \n    CHANGE_EDIT_MODE,\n    CLOSE_ADD_RECIPE_FORM,\n    SELECT_EDIT_RECIPE,\n    ClOSE_ADD_CATEGORY_FORM\n} from './types';\n\n\n// Open add recipe form \nexport const changeEditMode = mode => async dispatch => {\n    dispatch({\n        type: CHANGE_EDIT_MODE,\n        payload: mode\n    })\n}\n\n\n\n// Save new recipe \nexport const saveNewRecipe = formData => async dispatch => {\n    try {\n       \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post(`${url}/api/recipes`, formData, config);\n        \n\n        dispatch({\n            type: CLOSE_ADD_RECIPE_FORM,\n            payload: res.data.data\n        })\n        \n    } catch (err) {\n        console.log(err.message);\n    }\n} \n\n\n// Update recipe\nexport const updateRecipe = (id, formData) => async dispatch => {\n    try {\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put(`${url}/api/recipes/${id}`, formData, config);\n\n        dispatch({\n            type: CLOSE_ADD_RECIPE_FORM,\n            payload: res.data.data\n        })\n    } catch (err) {\n        console.log(err.message)\n    }\n}\n\n\n// Select a recipe by id\nexport const selectEditRecipe = id => async dispatch => {\n    try {\n        const res = await axios.get(`${url}/api/recipes?_id=${id}`);\n \n        dispatch({\n            type: SELECT_EDIT_RECIPE,\n            payload: res.data.data[0] \n        })\n        \n    } catch (err) {\n         console.error(err.message);\n    } \n}\n\n\n// Delete recipe\nexport const deleteRecipe = id => async dispatch => {\n    try {\n        const res = axios.delete(`${url}/api/recipes/${id}`);\n    } catch (err) {\n        console.log(err.message);\n    }\n}\n\n\n// Save new category\nexport const saveCategory = (formData) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post(`${url}/api/categories`, formData, config);\n\n        dispatch({\n            type: ClOSE_ADD_CATEGORY_FORM,\n            payload: res.data\n        })\n\n    } catch (err) {\n        \n    }\n}\n\n\n// Save image"]},"metadata":{},"sourceType":"module"}