{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/ReactHillBrewing/client/src/components/main/Recipe.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { url } from '../../config';\nimport { selectRecipe } from '../../actions/recipe';\nimport Spinner from '../layout/Spinner';\n\nconst Recipe = ({\n  recipe: {\n    selectedRecipe: {\n      title,\n      subtitle,\n      image,\n      paragraphs\n    },\n    loading\n  },\n  match,\n  selectRecipe\n}) => {\n  useEffect(() => {\n    selectRecipe(match.params.slug);\n  }, []);\n  let recipeImage = `${url}/uploads/recipe-img/${image}`;\n  return !title ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    id: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, subtitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blog-img\",\n    style: {\n      backgroundImage: `url(${recipeImage})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  recipe: state.recipe\n});\n\nexport default connect(mapStateToProps, {\n  selectRecipe\n})(Recipe);","map":{"version":3,"sources":["/Users/admin/Desktop/ReactHillBrewing/client/src/components/main/Recipe.js"],"names":["React","Fragment","useEffect","connect","url","selectRecipe","Spinner","Recipe","recipe","selectedRecipe","title","subtitle","image","paragraphs","loading","match","params","slug","recipeImage","backgroundImage","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AACZC,EAAAA,MAAM,EAAE;AAACC,IAAAA,cAAc,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA,KAAnB;AAA0BC,MAAAA;AAA1B,KAAjB;AAAyDC,IAAAA;AAAzD,GADI;AAEZC,EAAAA,KAFY;AAGZV,EAAAA;AAHY,CAAD,KAGQ;AAEnBH,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,YAAY,CAACU,KAAK,CAACC,MAAN,CAAaC,IAAd,CAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIC,WAAW,GAAI,GAAEd,GAAI,uBAAsBQ,KAAM,EAArD;AAEA,SAEI,CAACF,KAAD,gBAAS,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAT,gBAEA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,EAAE,EAAC,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAL,CADJ,eAEI;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBC,QAAtB,CAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEQ,MAAAA,eAAe,EAAG,OAAMD,WAAY;AAAtC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CAJJ;AAYH,CAvBD;;AA0BA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,MAAM,EAAEa,KAAK,CAACb;AADgB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACiB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,MAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { url } from '../../config';\nimport { selectRecipe } from '../../actions/recipe';\nimport Spinner from '../layout/Spinner';\n\nconst Recipe = ({ \n    recipe: {selectedRecipe: { title, subtitle, image, paragraphs }, loading}, \n    match, \n    selectRecipe }) => {\n        \n    useEffect(() => {\n        selectRecipe(match.params.slug);\n    }, []);\n\n    let recipeImage = `${url}/uploads/recipe-img/${image}`;\n\n    return (\n\n        !title ? <Spinner /> : \n\n        <Fragment>\n            <div className=\"main-container\" id=\"main-container\">\n                <h1>{title}</h1>\n                <p className=\"muted\">{subtitle}</p>\n                <div className=\"blog-img\" style={{ backgroundImage: `url(${recipeImage})` }}></div>\n            </div>\n        </Fragment>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    recipe: state.recipe\n});\n\nexport default connect(mapStateToProps, { selectRecipe })(Recipe);"]},"metadata":{},"sourceType":"module"}